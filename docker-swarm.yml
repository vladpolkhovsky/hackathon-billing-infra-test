services:

  nginx:
    image: umputun/nginx-le:latest
    env_file:
      - .env.prod
    volumes:
      - ./nginx/nginx.prod.tmpl.conf:/etc/nginx/templates/billing-service.conf.template
      - nginx-ssl:/etc/nginx/ssl
    environment:
      TZ: Europe/Moscow
    ports:
      - "80:80"
      - "8080:80"
      - "443:443"
    restart: always

  registry:
    image: registry:3
    ports:
      - "5000:5000"
    volumes:
      - registry-data:/var/lib/registry
    restart: always

  registry-ui:
    image: joxit/docker-registry-ui:main
    restart: always
    ports:
      - "4444:80"
    env_file:
      - .env.prod
    environment:
      - SINGLE_REGISTRY=true
      - REGISTRY_TITLE=Billing Docker Registry UI
      - REGISTRY_URL=${REGISTRY_DOMAIN}

  postgres:
    image: docker.vpolkhovsky.net/billing/postgres:latest
    command: -c 'max_connections=500'
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      TZ: Europe/Moscow
    healthcheck:
      interval: 10s
      retries: 10
      start_period: 45s
      test: pg_isready -U postgres
      timeout: 10s
    ports:
      - "6000:5432"
    restart: unless-stopped
    volumes:
      - ./postgres/pg-init-db.sql:/docker-entrypoint-initdb.d/postgres-init.sql
      - pgdata:/var/lib/postgresql/data:rw

  liquibase:
    image: docker.vpolkhovsky.net/billing/liquibase:latest
    entrypoint: [ "liquibase", "update" ]
    environment:
      LIQUIBASE_COMMAND_URL: jdbc:postgresql://postgres:5432/billing
      LIQUIBASE_COMMAND_USERNAME: postgres
      LIQUIBASE_COMMAND_PASSWORD: postgres
      LIQUIBASE_COMMAND_CHANGELOG_FILE: master.xml
    depends_on:
      [ "postgres" ]

  zookeeper:
    image: bitnamilegacy/zookeeper:3.6.1
    ports:
      - "2181"
    volumes:
      - zk-data:/bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: unless-stopped

  kafka:
    image: bitnamilegacy/kafka:2.5.0
    ports:
      - "9093:9093"
    volumes:
      - kafka-data:/bitnami/kafka
    depends_on:
      - zookeeper
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_HEAP_OPTS=-Xmx512m -Xms256m
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_MAX_MESSAGE_BYTES=3145728
      - KAFKA_REPLICA_FETCH_MAX_BYTES=3145728
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8051:8080"
    environment:
      - DYNAMIC_CONFIG_ENABLED="true"
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - SERVER_SERVLET_CONTEXT_PATH=/kafka-ui
    volumes:
      - kafka-ui-data:/etc/kafkaui
    depends_on:
      - kafka
    restart: unless-stopped

volumes:
  registry-data: { }
  nginx-ssl: { }
  pgdata: { }
  zk-data: { }
  kafka-data: { }
  kafka-ui-data: { }