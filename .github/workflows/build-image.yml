name: Tag, Build and Push Images

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  IMAGE_PREFIX: billing

jobs:
  create_tag_release:
    name: "Create tag for this commit"
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.create_tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Tag
        id: create_tag
        run: |
          TAG="v${{ github.run_number }}-$(git rev-parse --short HEAD)"
          git tag $TAG
          git push origin $TAG
          echo "tag=$TAG" >> $GITHUB_OUTPUT

  build-and-push:
    needs: create_tag_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - nginx
          - backend
          - python-backend
          - frontend
          - postgres
          - liquibase
        include:
          - service: nginx
            context: .
            dockerfile: nginx/Dockerfile
          - service: backend
            context: ./java-backend
            dockerfile: Dockerfile
          - service: python-backend
            context: ./python-backend
            dockerfile: Dockerfile
          - service: frontend
            context: ./frontend
            dockerfile: Dockerfile
          - service: postgres
            context: ./postgres
            dockerfile: Dockerfile
          - service: liquibase
            context: ./liquibase
            dockerfile: Dockerfile
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

#      - name: Log in to Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service }}
          tags: |
            type=raw,value=${{ needs.create_tag_release.outputs.tag }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-images:
    needs: [create_tag_release, build-and-push]
    name: Deploy images to registry
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy notification
        run: |
          echo "All images built and pushed successfully!"
          echo "Tag: ${{ needs.create_tag_release.outputs.tag }}"
          echo "Ready for deployment"